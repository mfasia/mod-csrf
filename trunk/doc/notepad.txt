
general:
- how to handle exceptions?
- sorry page (to continue with start page)
- enforced for any request having "arguments" (query, form post, multipart)
- no application specific settings (fully automatic)
- "classic" csrf (link/script embedded within a web page) vs. other types of link distribution (e.g. by email, within a document, application, ...) (redirect to initial page)

add an "unique_id" to each request (having args)
- unique_id:
  - short lived
  - hash user name/id (r->user) if available
  - optional: hash ip address (mask/range)
  - encrypt the whole (can't be generated by anybody else)
  - sent by a header field
- variant A: inject java script which adds unique_id
  - to all html forms in order to protect POST requests
    -> simple
  - to all references (at least those having a query)
    -> difficult to implement by JS? performance?
- variant B: inject java script which adds unique_id
  - to each http request performed by the browser
    -> leave page only? (issued by the user)
    -> what about content within the page (no interaction?)
- variant C: plugin adds unique_id
  - to each http request performed by the browser
    -> we can't support all browsers

milestones (see http://opensource.adnovum.ch/mod_qos/#QS_MileStone)
- user must visit previous page

referer header
- "classic" csrf only
