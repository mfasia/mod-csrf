#
# Test id timeout
#

INCLUDE scripts/ports

CLIENT

# restart with 3 sec timeout
_EXEC ./ctl.sh restart -D timeout 1>/dev/null 2>/dev/null

# get id

_REQ 127.0.0.1 $PORT_BASE
__GET /htt/index.html HTTP/1.1
__Host: 127.0.0.1:$PORT_BASE
__
_MATCH headers "Set-Cookie: csrfuid=(.*); Path" cookie
_MATCH body "csrfInsert\(\"csrfpId\", \"(.*)\"\);" csrfpid
_WAIT
_CLOSE

# configured: 3 seconds
_SLEEP 5000

_REQ 127.0.0.1 $PORT_BASE
__GET /htt/index.html?query=1234&csrfpId=$csrfpid HTTP/1.1
__Host: 127.0.0.1:$PORT_BASE
__Cookie: csrfuid=$cookie
__
_EXPECT . "!200 OK"
_WAIT
_CLOSE
_SLEEP 200
_EXPECT EXEC "mod_csrf\(020\): request denied, expired id, action=deny"
_EXEC tail -1 logs/error_log

# restart with default timeout
_EXEC ./ctl.sh restart 1>/dev/null 2>/dev/null

# get id

_REQ 127.0.0.1 $PORT_BASE
__GET /htt/index.html HTTP/1.1
__Host: 127.0.0.1:$PORT_BASE
__
_MATCH headers "Set-Cookie: csrfuid=(.*); Path" cookie
_MATCH body "csrfInsert\(\"csrfpId\", \"(.*)\"\);" csrfpid
_WAIT
_CLOSE

# default timeout: 3600 seconds
_SLEEP 5000

_REQ 127.0.0.1 $PORT_BASE
__GET /htt/index.html?query=1234&csrfpId=$csrfpid HTTP/1.1
__Host: 127.0.0.1:$PORT_BASE
__Cookie: csrfuid=$cookie
__
_EXPECT . "200 OK"
_WAIT
_CLOSE

END

SERVER $PORT_BASE1

# initial page

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Type: text/html
__Content-Length: AUTO
__
__<html>
__<head>
__<title>htt</title>
__</head>
__<body>
__<p>htt</p>
__</body>
__</html>
_CLOSE

# initial page

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Type: text/html
__Content-Length: AUTO
__
__<html>
__<head>
__<title>htt</title>
__</head>
__<body>
__<p>htt</p>
__</body>
__</html>
_CLOSE

# valid requests

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Type: text/html
__Content-Length: AUTO
__
__<html>
__<head>
__<title>htt</title>
__</head>
__<body>
__<p>htt</p>
__</body>
__</html>
_CLOSE

END
